/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Tue Nov 28 22:29:44 2017. */

#ifndef PB_SOMPADATA_PB_H_INCLUDED
#define PB_SOMPADATA_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _Ping_Op {
    Ping_Op_PING = 0,
    Ping_Op_PONG = 1
} Ping_Op;
#define _Ping_Op_MIN Ping_Op_PING
#define _Ping_Op_MAX Ping_Op_PONG
#define _Ping_Op_ARRAYSIZE ((Ping_Op)(Ping_Op_PONG+1))

/* Struct definitions */
typedef struct _Ping {
    Ping_Op operation;
    uint32_t number;
/* @@protoc_insertion_point(struct:Ping) */
} Ping;

typedef struct _SensorReport {
    uint32_t device_id;
    uint32_t sensor_id;
    uint32_t timestamp;
    pb_size_t which_value;
    union {
        float f;
        uint32_t percentage;
        int32_t val;
        bool b;
    } value;
    uint32_t wifi_failcount;
    uint32_t wifi_id;
    uint32_t boot_count;
    uint32_t millis;
/* @@protoc_insertion_point(struct:SensorReport) */
} SensorReport;

typedef struct _ServerResponse {
    uint32_t goto_sleep_seconds;
    bool upgrade_available;
    bool start_ota_ap;
    pb_callback_t firmware_url;
    pb_callback_t spiffs_url;
/* @@protoc_insertion_point(struct:ServerResponse) */
} ServerResponse;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SensorReport_init_default                {0, 0, 0, 0, {0}, 0, 0, 0, 0}
#define ServerResponse_init_default              {0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define Ping_init_default                        {(Ping_Op)0, 0}
#define SensorReport_init_zero                   {0, 0, 0, 0, {0}, 0, 0, 0, 0}
#define ServerResponse_init_zero                 {0, 0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define Ping_init_zero                           {(Ping_Op)0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define Ping_operation_tag                       1
#define Ping_number_tag                          2
#define SensorReport_f_tag                       4
#define SensorReport_percentage_tag              5
#define SensorReport_val_tag                     6
#define SensorReport_b_tag                       7
#define SensorReport_device_id_tag               1
#define SensorReport_sensor_id_tag               2
#define SensorReport_timestamp_tag               3
#define SensorReport_wifi_failcount_tag          8
#define SensorReport_wifi_id_tag                 9
#define SensorReport_boot_count_tag              10
#define SensorReport_millis_tag                  11
#define ServerResponse_goto_sleep_seconds_tag    1
#define ServerResponse_upgrade_available_tag     2
#define ServerResponse_start_ota_ap_tag          3
#define ServerResponse_firmware_url_tag          4
#define ServerResponse_spiffs_url_tag            5

/* Struct field encoding specification for nanopb */
extern const pb_field_t SensorReport_fields[12];
extern const pb_field_t ServerResponse_fields[6];
extern const pb_field_t Ping_fields[3];

/* Maximum encoded size of messages (where known) */
#define SensorReport_size                        53
/* ServerResponse_size depends on runtime parameters */
#define Ping_size                                8

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SOMPADATA_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
